// Prisma schema for banking app backend

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  name      String?
  cin       String?
  role      Role     @default(CLIENT)
  createdAt DateTime @default(now())
  requests  Request[]
}

model Request {
  id         Int           @id @default(autoincrement())
  type       RequestType
  status     RequestStatus @default(PENDING)
  document   String?
  createdAt  DateTime      @default(now())
  updatedAt  DateTime      @updatedAt
  user       User          @relation(fields: [userId], references: [id])
  userId     Int
}

model KycModificationRequest {
  id           Int      @id @default(autoincrement())
  user         User     @relation(fields: [userId], references: [id])
  userId       Int
  fieldName    String   // e.g. "phone", "email", etc. (could use enum if desired)
  oldValue     String
  newValue     String
  status       KycModificationStatus @default(PENDING)
  admin        User?    @relation("AdminKycModificationRequests", fields: [adminId], references: [id])
  adminId      Int?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  decisionDate DateTime?
}

enum Role {
  CLIENT
  ADMIN
}

enum RequestType {
  ACCOUNT_OPENING
  CHEQUIER
  CARD
}

enum RequestStatus {
  PENDING
  APPROVED
  REJECTED
}

enum KycModificationStatus {
  PENDING
  APPROVED
  REJECTED
} 